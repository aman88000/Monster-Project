{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchFeild","fetch","then","response","json","setState","this","filteredMonster","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+SAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJhBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCA/CM,G,MALG,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC7B,OACI,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC4BrEG,E,kDA1Bb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAX,GAAQ,OAAI,EAAKc,SAAS,CAACd,SAAUA,S,oBAE7C,WAAS,IAAD,OACN,EAAgCe,KAAKP,MAA9BR,EAAP,EAAOA,SAAUS,EAAjB,EAAiBA,YACXO,EAAkBhB,EAASiB,QAAO,SAAAtB,GAAO,OAAIA,EAAQE,KAAKqB,cAAcC,SAASV,EAAYW,wBACnG,OACA,sBAAK5B,UAAU,MAAf,UACE,iDACC,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAc,SAACiB,GAAK,EAAKP,SAAS,CAACL,YAAaY,EAAEC,OAAOC,WACjG,cAAC,EAAD,CAAUvB,SAAYgB,W,GArBXQ,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.d628a0b2.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.style.css'\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n           <h2>{props.monster.name}</h2>\r\n           <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './card-list.style.css';\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map(monster => <Card key={monster.id} monster={monster} />)}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './search-box.style.css'\r\nconst SearchBox = ({placeholder, handleChange})=>{\r\n    return(\r\n        <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />\r\n    )\r\n}\r\nexport default SearchBox;","import React from 'react'\nimport './App.css'\nimport { CardList } from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchFeild: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(monsters => this.setState({monsters: monsters}))\n  }\n  render(){\n    const {monsters, searchFeild} = this.state;\n    const filteredMonster = monsters.filter(monster => monster.name.toLowerCase().includes(searchFeild.toLocaleLowerCase()))\n    return (\n    <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n       <SearchBox placeholder='search monster' handleChange={(e)=>{this.setState({searchFeild: e.target.value})}} />\n       <CardList monsters = {filteredMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}